Waffle-server deployment tools
==============================

Directory structure:
-------------------

  cf_cripts       - automation scripts
  cloudformation  - AWS CloudFormation templates
  haproxy_docker  - HAProxy docker image environment
  gcp_scripts     - scripts for deploying to GCP
  README          - this file


+cloudformation:
---------------

  ws_ecs_cluster_2_az_ecache_redis_2_nodes_ft.template:
    ECS Cluster for HAProxy
    ECS Cluster for Node
    ElasticCache Redis: 2 nodes, replicatino, fault tolerance
  
  ws_ecs_cluster_2_az_ecache_single_redis.template
    ECS Cluster for HAProxy
    ECS Cluster for Node
    ElasticCache Redis: 1 node

+haproxy_docker:
----------------

  Dockerfile                    - HAProxy dockerfile
  haproxy_gracefull_reload.sh   - script for HAProxy gracefull reload when config is changed. Used by confd
  run.sh                        - docker CMD script.
  confd                         - confd configuration with config templates for HAProxy

+cf_scripts:
------------

*  awsecrops - create ECR repositories, build docker images, push images to ECR.
               These ECR repositories used in cloud formation stack.

    Usage:
      
      ./awsecrops <command> [settings file]
  
    Commands:
      buildnpush   : create ECR repositories or uses existing
                       build docker images and push them to ECR
      cleanup      : remove ECR repositories
      help         : this message
  
    Settings file of form:
      export VAR_NAME=VAR_VALUE
  
    Variables:
      Without defaults:
        NODE_ECR_NAME
        HAPROXY_ECR_NAME
  
      With defaults:
        HAPROXY_ECR_LABEL     -> latest
        NODE_ECR_LABEL        -> latest
        AWS_DEFAULT_REGION    -> us-east-1
  
      You can pass these variables throw env or settings file or mixed.

  This script uses the same SETTINGS file as the awstackops.


*  awstackops  - AWS CloudFormation manipulation. Currently create and delete stack

    Usage:
      
      ./awstackops <command> [settings file]
  
    Commands:
      create_stack
      delete_stack
      help
  
    Settings file of form:
      export VAR_NAME=VAR_VALUE
  
    Variables:
      Without defaults:
        STACK_NAME
        MONGODB_URL
        NEWRELIC_KEY
        AWS_SSH_KEY_NAME
        HAPROXY_ECR_NAME
        NODE_ECR_NAME
  
      With defaults:
        HAPROXY_ECR_LABEL     -> latest
        NODE_ECR_LABEL        -> latest
        ECS_INSTANCE_TYPE     -> t2.micro
        REDIS_INSTANCE_TYPE   -> cache.t2.micro
        REDIS_PORT            -> 6379
        MIN_CLUSTER_INSTANCES -> 1
        MAX_CLUSTER_INSTANCES -> 10
        DDF_REPO_PATH         -> /home/waffle-server/ddf
        DEFAULT_USER_PASSWORD -> 123
        CF_TEMPLATE           -> ../cloudformation/ws_ecs_cluster_2_az_ecache_single_redis.template
        AWS_DEFAULT_REGION    -> us-east-1
  
      You can pass these variables throw env or settings file or mixed.
  
    Sample SETTINGS file:
  
      export AWS_ACCESS_KEY_ID=***************
      export AWS_SECRET_ACCESS_KEY=*******************
      export MONGODB_URL="mongodb://SOME_ADDRESS/sdfsfd"
      export NEWRELIC_KEY="**********************"
      export AWS_SSH_KEY_NAME="SOME_KEY_NAME"
      export HAPROXY_ECR_NAME="haprconfd"
      export NODE_ECR_NAME="ws-test"
  
    Sample command line:
      $ STACK_NAME=test-stack ./awstakops create_stack SETTINGS


  Call 'awsecrops buildnpush' before 'awstackops create_stack'
   and 'awsecrops cleanup' after 'awstackops delete_stack'

  ** !! VARIABLE SET IN ENV AND SETTINGS FILE SAME TIME WILL BE READED FROM FILE ONLY !! **

+gcp_scripts:
------------

#### Running deployment process manual way
  ```
    NODE_ENV=test npm run deploy
  ```

#### Running unpublish process manual way
  ```
    VERSION=2.12.1 NODE_ENV=test npm run unpublish
  ```

#### Aliases of NODE_ENV's for deploy & unpublish processes

  ```
    npm run deploy-local
    npm run deploy-dev
    npm run deploy-test
    npm run deploy-stage
    npm run deploy-prod

    VERSION=X.X.X npm run unpublish-local
    VERSION=X.X.X npm run unpublish-dev
    VERSION=X.X.X npm run unpublish-test
    VERSION=X.X.X npm run unpublish-stage
    VERSION=X.X.X npm run unpublish-prod
  ```
  
#### Main scripts

  deployment : `deployment/gcp_scripts/autodeploy.ts`
  unpublish  : `deployment/gcp_scripts/autoremove.ts`
  
#### Requirements

  *settings_gapminder_XXX.json   - file with customers settings (*SHOULD BE SETTING UP BEFORE DEPLOY OR UNPUBLISH PROCESSES*)
  autodeploy.ts                  - script for running deployment process (required: settings_gapminder_XXX.json)
  autoremove.ts                  - script for running removing stack process (required: settings_gapminder_XXX.json)
  default_deployment_config.json - default configuration for deployment and removing process

